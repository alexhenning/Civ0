<html>
<body>
<font face="monospace">
<script type="text/javascript">

var Terrain = new Array();
Ocean = 0;
Terrain[Ocean] = {symbol: "o", food: 1, production: 0, "trade": 2};
Glacier = 1;
Terrain[Glacier] = {symbol: "c", food: 0, production: 0, "trade": 0};
Tundra = 2;
Terrain[Tundra] = {symbol: "t", food: 1, production: 0, "trade": 0};
Plains = 3;
Terrain[Plains] = {symbol: "p", food: 1, production: 1, "trade": 0};
Grassland = 4;
Terrain[Grassland] = {symbol: "g", food: 2, production: 0, "trade": 0};
Forest = 5;
Terrain[Forest] = {symbol: "f", food: 1, production: 2, "trade": 0};
Swamp = 6;
Terrain[Swamp] = {symbol: "s", food: 1, production: 0, "trade": 0};
Jungle = 7;
Terrain[Jungle] = {symbol: "j", food: 1, production: 0, "trade": 0};
Desert = 8;
Terrain[Desert] = {symbol: "d", food: 0, production: 1, "trade": 0};
Hills = 9;
Terrain[Hills] = {symbol: "h", food: 1, production: 0, "trade": 0};
Mountains = 10;
Terrain[Mountains] = {symbol: "m", food: 0, production: 1, "trade": 0};
TerrainSymbol = new Array();
for (X=Ocean; X<=Mountains; X++){
   TerrainSymbol[Terrain[X].symbol] == X;
}

MapX = 24;
MapY = 30; //prompt("How wide a world is it?","30");
var Region = new Array();
TerrainProbability = new Array("ttc","ttttc", "tppp", "pppgfs", "gfs", "jjsgg", "jjjssg", "gggd", "dddgg");

function Rand(X){
	return(Math.floor(Math.random()*X+1));
	}

function TerrainAtLatitude(X){
   return Rand(9);
/*   switch (Rand(20)){
      case 1: return Mountains; break;
      case 2: return Hills; break;
      default:
         Latitude = 3; //Math.floor(X*18/MapX);
         if (Latitude>8){Latitude = 18-Latitude};
         Choices = String(TerrainProbability[Latitude]);
         Choice = Choices.charAt(Rand(Choices.length)-1);
         //alert(Choice + ": " + TerrainSymbol[Choice]);
         return TerrainSymbol[Choice];
   } */
}

function GenerateMap(Region){

   for (X=0; X<=MapX; X++){
      Region[X] = new Array();
   }

   // sea by default
   for (X=0; X<=MapX; X++){
      for (Y=0; Y<=MapY; Y++){
         Region[X][Y] = {terrain: Ocean};
      }
   }
   // glaciers
   for (Y=0; Y<MapY; Y++){
      Region[0][Y].terrain = Glacier;
      if (Rand(3)==1){
         Region[1][Y].terrain = Glacier;
      }
      if (Rand(6)==1){
         Region[MapX-2][Y].terrain = Glacier;
      }
	  Region[MapX-1][Y].terrain = Glacier;
   }


   Land1 = Rand(6)+5;
   LandEnd1 = Land1+Rand(5)+Rand(5);
   LandOffset2 = Rand(6)+10;
   Land2 = LandEnd1+LandOffset2;
   LandEnd2 = Math.min(Land2+Rand(5)+Rand(5),MapY);
   // insert a channel at the narrowest point
   NarrowestWidth = MapY;
   NarrowestRow = MapX;
   for (X=1; X<MapX-3; X++){
      for (Y=Land1; Y<=LandEnd1; Y++){
         Region[X][Y].terrain = TerrainAtLatitude(X);
      }
      if (X>Rand(4)) {
         for (Y=Land2; Y<=LandEnd2; Y++){
            Region[X][Y].terrain = TerrainAtLatitude(X);
         }
      }
      Land1 = Math.max(Land1+Rand(5)-3,1);
      LandEnd1 = LandEnd1+Rand(3)-2;
      if (LandEnd1<Land1-1){
         LandEnd1=Land1+Rand(5)+5;
      	  NarrowestRow=X;
      }
      if ((X>3+Rand(3))&&(LandEnd1-Land1<NarrowestWidth)){
         NarrowestWidth=LandEnd1-Land1;
         NarrowestRow=X;
      }
      Land2 = LandEnd1+LandOffset2+Rand(3)-2;
      LandEnd2 = Math.min(LandEnd2+Rand(5)-3,MapY);
   }
   for (Y=0; Y<MapY/2; Y++){
      Region[NarrowestRow][Y].terrain = Ocean;
   }


}


function i(item,X,Y){
   for (A=-1; A<=1; A++){
      for (B=-1; B<=1; B++){
         //alert(Region[X+A][Y+B].terrain);
         document.getElementById('p'+(X+A)+'_'+(Y+B)).src = Terrain[Region[X+A][Y+B].terrain].symbol+".png";
         // document.all['p'+(X+A)+'_'+(Y+B)].src=Region[X+A][Y+B]+".png";
      }
   }
   if (Region[X][Y].terrain != Ocean){
      item.src="settler.png";
   }else{
      item.src="trireme.png";
   }
}

GenerateMap(Region);
for (X=0; X<MapX; X++){
   for (Y=0; Y<MapY; Y++){
   	  document.write('<img src=u.png id=p', X,'_',Y,' onclick="i(this,', X, ',', Y, ')">');
      //document.write("<img src=", Region[X][Y], ".png>");
   }
   document.writeln("<br>");
}


</script>
</font>
</body>
</html>